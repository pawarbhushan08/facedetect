package org.opencv.samples.facedetect;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

/**
 * This Activity is implemented to create a PDF file as a Report document of the analysis.
 */
public class Results extends Activity {
    private EditText patientName;
    private EditText dob;
    private Button btnSave;
    private RadioGroup gndr;
    private RadioButton selectedBtn;
    private EditText examiner;
    private TextView typeNyst;
    Image image = null;

    private static String FILE = "/sdcard/ReportFile.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    String datatoCollect="";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_results);

        patientName = (EditText)findViewById(R.id.patientName);
        dob = (EditText)findViewById(R.id.DOB);

        gndr = (RadioGroup) findViewById(R.id.gender);
        /*int selectedId = gndr.getCheckedRadioButtonId();
        Log.d("ID",""+selectedId);
        selectedBtn = (RadioButton) findViewById(selectedId);*/

        examiner = (EditText)findViewById(R.id.examiner);


        Intent intent = getIntent();
        datatoCollect = intent.getStringExtra("Nystagmus_Type");
        Log.v("eyeSelect0",datatoCollect);

        typeNyst = (TextView)findViewById(R.id.TON);
        typeNyst.setText(datatoCollect);
        addListenerOnButton();

    }

    /**
     * The button Save is implemented to save the document on SD card.
     * The button Exit is implemented to Exit from the application.
     */
    public void addListenerOnButton() {

        final Context context = this;

        btnSave = (Button) findViewById(R.id.save);

        btnSave.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View arg0) {


                try {
                    int selectedId = gndr.getCheckedRadioButtonId();
                    Log.d("ID",""+selectedId);
                    selectedBtn = (RadioButton) findViewById(selectedId);
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream(FILE));
                    document.open();
                    //addMetaData(document);
                    addTitlePage(document);
                    document.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }



        }

        });

        Button Exit = (Button) findViewById(R.id.exit);
        Exit.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                Intent intent = new Intent(getApplicationContext(), AndroidVideoCaptureExample.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                intent.putExtra("EXIT", true);
                startActivity(intent);

                System.exit(0);
            }
        });

    }

    /**
     * This method does formatting of the PDF document and the content in it.
     * @param document
     * @throws DocumentException
     * @throws IOException
     */
        private void addTitlePage(Document document)
                throws DocumentException, IOException {
            Paragraph preface = new Paragraph();
            // We add one empty line
            addEmptyLine(preface, 1);
            // Lets write a big header
            // Will create: Report generated by: _name, _date
            preface.add(new Paragraph(
                    "Report generated by: " + "Nystagmus detector app" + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                    smallBold));

            addEmptyLine(preface, 1);

            preface.add(new Paragraph("Patient Name: "+patientName.getText(), catFont));

            addEmptyLine(preface, 1);

            preface.add(new Paragraph("Date of Birth: "+dob.getText(), catFont));

            addEmptyLine(preface, 1);

            preface.add(new Paragraph("Gender: "+selectedBtn.getText(), catFont));

            addEmptyLine(preface, 1);

            preface.add(new Paragraph("Examiner: "+examiner.getText(), catFont));

            addEmptyLine(preface, 1);

            preface.add(new Paragraph("Nystagmus Detected: "+typeNyst.getText(), catFont));

            addEmptyLine(preface, 1);
            preface.add(new Paragraph("Result: "+"", catFont));
            addEmptyLine(preface, 1);

            image = Image.getInstance("/sdcard/DCIM/chart.jpg");
            float scaler = ((document.getPageSize().getWidth() - document.leftMargin()
                    - document.rightMargin()) / image.getWidth()) * 100;

            image.scalePercent(scaler);
            Log.v("Image Loaded",""+image.type());

            preface.add(image);

            addEmptyLine(preface,4);

            preface.add(new Paragraph("Signature of Examiner: "+"", catFont));

            document.add(preface);
            // Start a new page
            document.newPage();
        }


    /**
     * This method adds the empty line in the document.
     * @param paragraph
     * @param number
     */
        private void addEmptyLine(Paragraph paragraph, int number) {
            for (int i = 0; i < number; i++) {
                paragraph.add(new Paragraph(" "));
            }
        }
    }

